import React, { useEffect, useState } from 'react';

const PropertyModeration: React.FC = () => {
  const [properties, setProperties] = useState<any[]>([]);

  useEffect(() => {
    fetch('http://localhost:3000/admin/properties/pending')
      .then(res => res.json())
      .then(data => setProperties(data))
      .catch(console.error);
  }, []);

  const handleDecision = async (id: number, status: 'APPROVED' | 'REJECTED') => {
    try {
      await fetch(`http://localhost:3000/admin/properties/${id}/status`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status }),
      });

      setProperties(prev => prev.filter(prop => prop.id !== id));
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞');
    }
  };

  const handleDownload = (fileName: string) => {
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
    console.log(`–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º: ${fileName}`);
    
    if (!fileName) {
      console.error('–û—à–∏–±–∫–∞: –∏–º—è —Ñ–∞–π–ª–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ!');
      return;
    }

    const downloadUrl = `http://localhost:3000/uploads/housingDocuments/${fileName}`;
    console.log(`URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: ${downloadUrl}`);
    // –≠—Ç–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
    window.open(downloadUrl, '_blank');
  };

  return (
    <div>
      <h2>–û–∂–∏–¥–∞—é—â–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h2>
      {properties.map((property) => (
        <div key={property.id} className="moderation-item" style={{ marginBottom: '1.5rem', borderBottom: '1px solid #ccc', paddingBottom: '1rem' }}>
          <h3>{property.name}</h3>
          <p>{property.description}</p>

          {property.documents?.length > 0 && (
            <div>
              <strong>–î–æ–∫—É–º–µ–Ω—Ç—ã:</strong>
              <ul>
                {property.documents.map((doc: any) => {
                  // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –∏–º—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
                  console.log(`–î–æ–∫—É–º–µ–Ω—Ç: ${doc.fileName}, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è: ${doc.originalName}`);

                  return (
                    <li key={doc.id}>
                      <a
                        href="#"
                        onClick={(e) => {
                          e.preventDefault();
                          handleDownload(doc.fileName); // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                        }}
                      >
                        üìé {doc.originalName || doc.fileName}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </div>
          )}

          <button onClick={() => handleDecision(property.id, 'APPROVED')}>‚úÖ –û–¥–æ–±—Ä–∏—Ç—å</button>
          <button className='reject-button' onClick={() => handleDecision(property.id, 'REJECTED')}>‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
        </div>
      ))}
    </div>
  );
};

export default PropertyModeration;
