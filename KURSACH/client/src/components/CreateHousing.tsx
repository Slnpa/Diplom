import React, { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import '../styles/CreateHousing.css';

const CreateHousing: React.FC = () => {
  const [formData, setFormData] = useState({
    name: '',
    description: '',
    location: '',
    pricePerNight: '',
    categoryId: '',
    criteria: [] as string[],
  });

  const [images, setImages] = useState<File[]>([]);
  const [documents, setDocuments] = useState<File[]>([]); // üîπ –ù–æ–≤—ã–π —Å—Ç–µ–π—Ç –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const [categories, setCategories] = useState<any[]>([]);
  const [criteriaList, setCriteriaList] = useState<any[]>([]);

  const user = useSelector((state: any) => state.user);
  const ownerId = user.userId;
  const canCreateHousing = user.role === 'ADMIN' || user.role === 'OWNER';

  useEffect(() => {
    fetch('http://localhost:3000/admin/categories')
      .then(response => response.json())
      .then(data => setCategories(data))
      .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error));

    fetch('http://localhost:3000/admin/criteria')
      .then(response => response.json())
      .then(data => setCriteriaList(data))
      .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤:', error));
  }, []);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setFormData({
      ...formData,
      categoryId: e.target.value,
    });
  };

  const handleCriteriaChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { value, checked } = e.target;
    setFormData(prevFormData => {
      const updatedCriteria = checked
        ? [...prevFormData.criteria, value]
        : prevFormData.criteria.filter(criterionId => criterionId !== value);
      return {
        ...prevFormData,
        criteria: updatedCriteria,
      };
    });
  };

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setImages(Array.from(e.target.files));
    }
  };

  const handleDocumentsChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setDocuments(Array.from(e.target.files));
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const formDataToSend = new FormData();
    formDataToSend.append('name', formData.name);
    formDataToSend.append('description', formData.description);
    formDataToSend.append('location', formData.location);
    formDataToSend.append('pricePerNight', formData.pricePerNight);
    formDataToSend.append('ownerId', ownerId.toString());
    formDataToSend.append('categoryId', formData.categoryId);

    if (formData.criteria.length > 0) {
      formData.criteria.forEach(criterionId => {
        formDataToSend.append('criteria[]', criterionId);
      });
    }

    if (images.length > 0) {
      images.forEach(file => {
        formDataToSend.append('images', file);
      });
    }

    if (documents.length > 0) {
      documents.forEach(file => {
        formDataToSend.append('housingDocuments', file);
      });
    }

    try {
      const response = await fetch('http://localhost:3000/housing', {
        method: 'POST',
        body: formDataToSend,
      });

      if (response.ok) {
        alert('–ñ–∏–ª—å–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!');
        const newProperty = await response.json();
        console.log(newProperty);

        setFormData({
          name: '',
          description: '',
          location: '',
          pricePerNight: '',
          categoryId: '',
          criteria: [],
        });
        setImages([]);
        setDocuments([]);
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∂–∏–ª—å—è');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∂–∏–ª—å—è');
    }
  };

  if (!canCreateHousing) {
    return <p className="error-message">–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∂–∏–ª—å—è. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∂–∏–ª—å–µ.</p>;
  }

  return (
    <div className="create-housing-container">
      <h2 className="create-housing-header">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –∂–∏–ª—å–µ</h2>
      <form onSubmit={handleSubmit} className="create-housing-form">
        <input
          name="name"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
          value={formData.name}
          onChange={handleChange}
          required
        />
        <textarea
          name="description"
          placeholder="–û–ø–∏—Å–∞–Ω–∏–µ"
          value={formData.description}
          onChange={handleChange}
          required
        />
        <input
          name="location"
          placeholder="–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
          value={formData.location}
          onChange={handleChange}
          required
        />
        <input
          name="pricePerNight"
          type="number"
          placeholder="–¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å"
          value={formData.pricePerNight}
          onChange={handleChange}
          required
        />
        <select
          name="categoryId"
          value={formData.categoryId}
          onChange={handleCategoryChange}
          required
        >
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
          {categories.map(category => (
            <option key={category.id} value={category.id}>
              {category.name}
            </option>
          ))}
        </select>

        <div>
          <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:</p>
          {criteriaList.map(criterion => (
            <label key={criterion.id}>
              <input
                type="checkbox"
                value={criterion.id.toString()}
                checked={formData.criteria.includes(criterion.id.toString())}
                onChange={handleCriteriaChange}
              />
              {criterion.name}
            </label>
          ))}
        </div>

        <p>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∂–∏–ª—å—è:</p>
        <input
          type="file"
          accept="image/*"
          multiple
          onChange={handleImageChange}
          required
        />

        <p>–î–æ–∫—É–º–µ–Ω—Ç—ã (—Å–∫–∞–Ω—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ —Ç.–ø.):</p>
        <input
          type="file"
          accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
          multiple
          onChange={handleDocumentsChange}
        />

        <button type="submit">–°–æ–∑–¥–∞—Ç—å</button>
      </form>
    </div>
  );
};

export default CreateHousing;
